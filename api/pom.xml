<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.ontotext.example</groupId>
    <artifactId>movienator-parent</artifactId>
    <version>0.0.2-SNAPSHOT</version>
  </parent>

  <artifactId>movienator-api</artifactId>
  <packaging>war</packaging>

  <name>Movienator API</name>
  <description>Movienator API is the best</description>


  <properties>

    <swagger.version>2.9.2</swagger.version>
    <lombok.version>1.16.18</lombok.version>
    <ontotext.common-utils.version>10.2.0</ontotext.common-utils.version>
    <elasticsearch.client.version>6.6.2</elasticsearch.client.version>
    <org.apache.lucene.version>7.6.0</org.apache.lucene.version>
    <healthcheck-commons.version>8.0.0</healthcheck-commons.version>
    <io.fabric8.version>0.31.0</io.fabric8.version>
    <xsync.version>1.1</xsync.version>

  </properties>


  <dependencies>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>

    <dependency>
      <groupId>io.springfox</groupId>
      <artifactId>springfox-swagger2</artifactId>
      <version>${swagger.version}</version>
    </dependency>

    <dependency>
      <groupId>io.springfox</groupId>
      <artifactId>springfox-swagger-ui</artifactId>
      <version>${swagger.version}</version>
    </dependency>

    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>${lombok.version}</version>
    </dependency>

    <dependency>
      <groupId>com.ontotext.commons.pub</groupId>
      <artifactId>commons-util</artifactId>
      <version>${ontotext.common-utils.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.data</groupId>
          <artifactId>spring-data-commons</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.springframework.hateoas</groupId>
          <artifactId>spring-hateoas</artifactId>
        </exclusion>
        <exclusion>
          <groupId>junit</groupId>
          <artifactId>junit</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
    </dependency>

    <dependency>
      <groupId>org.json</groupId>
      <artifactId>json</artifactId>
    </dependency>

    <dependency>
      <groupId>org.eclipse.rdf4j</groupId>
      <artifactId>rdf4j-runtime</artifactId>
    </dependency>

    <dependency>
      <groupId>org.elasticsearch.client</groupId>
      <artifactId>transport</artifactId>
      <version>${elasticsearch.client.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.lucene</groupId>
      <artifactId>lucene-core</artifactId>
      <version>${org.apache.lucene.version}</version>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
    </dependency>

    <dependency>
      <groupId>healthcheck-commons</groupId>
      <artifactId>healthcheck-commons</artifactId>
      <version>${healthcheck-commons.version}</version>
      <exclusions>
        <exclusion>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
      </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>com.antkorwin</groupId>
      <artifactId>xsync</artifactId>
      <version>${xsync.version}</version>
    </dependency>

  </dependencies>


  <build>
    <finalName>${project.artifactId}</finalName>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <failOnMissingWebXml>false</failOnMissingWebXml>
          <attachClasses>true</attachClasses>
          <archive>
            <manifestEntries>
              <Build-Branch>${scmBranch}</Build-Branch>
              <Git-SHA>${buildNumber}</Git-SHA>
              <Build-Timestamp>${maven.build.timestamp}</Build-Timestamp>
              <Implementation-Version>${project.version}</Implementation-Version>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <version>${spring-boot.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>repackage</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${surefire.plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>${io.fabric8.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>build</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <images>
            <image>
              <alias>movienator-api</alias>
              <name>${project.artifactId}:${project.version}</name>
              <build>
                <dockerFileDir>${project.basedir}/src/main/docker</dockerFileDir>
                <assembly>
                  <inline>
                    <files>
                      <file>
                        <source>${project.build.directory}/${project.artifactId}.war</source>
                      </file>
                      <file>
                        <source>${project.basedir}/src/main/docker/movienator.sh</source>
                      </file>
                    </files>
                  </inline>
                </assembly>
              </build>
            </image>
          </images>
        </configuration>
      </plugin>
    </plugins>
  </build>


</project>